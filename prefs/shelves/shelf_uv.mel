global proc shelf_uv () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 248
        -height 248
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Assign checker texture to selected objects" 
        -enableBackground 0
        -align "center" 
        -label "Assign Checker Texture" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ACT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "checker.svg" 
        -image1 "checker.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.all as pm\n\nmaterial_name = 'th_checker_MAT'\ntry : material = pm.PyNode( material_name )\nexcept : material = pm.createSurfaceShader( 'lambert', name=material_name )[0]\n\ntry : checker = pm.PyNode( 'th_checker' )\nexcept :\n    checker = pm.shadingNode( 'checker', name='th_checker', asTexture=True )\n    tex2d = pm.shadingNode( 'place2dTexture', name='th_checker_TEX2D', asUtility=True )\n    tex2d.outUV >> checker.uv\n    tex2d.outUvFilterSize >> checker.uvFilterSize\n    \ntry : checker.outColor >> material.color\nexcept : pass\n\nfor obj in pm.ls(sl=True) :\n    pm.sets( material.shadingGroups()[0], edit=True, forceElement=obj )\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a projection planar to the selected faces" 
        -enableBackground 0
        -align "center" 
        -label "Planar Mapping" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyPlanProj.png" 
        -image1 "polyPlanProj.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.all as pm\nfor obj in pm.ls(sl=True) :    \n\ttry : pm.polyProjection( obj.faces, ch=1, type='Planar', ibd=False, kir=True,  md='c')\n\texcept : pass\n\ntry : pm.polyProjection( pm.ls( sl=True ), ch=1, type='Planar', ibd=False, kir=True,  md='c')\nexcept : pass" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Display Texture Border Edges" 
        -enableBackground 0
        -align "center" 
        -label "Texture Border Edges" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "TBE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "menuIconDisplay.png" 
        -image1 "menuIconDisplay.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ToggleTextureBorderEdges" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Select Shell" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySelectBoundary.png" 
        -image1 "polySelectBoundary.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polySelectBorderShell 0;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Separate the texture coordinates along the selected edges" 
        -enableBackground 0
        -align "center" 
        -label "Cut UV Edges" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "polyMapCut.png" 
        -image1 "polyMapCut.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polyPerformAction polyMapCut e 0" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select edges to be merged" 
        -enableBackground 0
        -align "center" 
        -label "Move and Sew UV Edges" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "polyMoveSew.png" 
        -image1 "polyMoveSew.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "performPolyMapSewMove 0" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select a poly object or UV's to be unfolded" 
        -enableBackground 0
        -align "center" 
        -label "Unfold" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "textureEditorUnfoldUVsLarge.png" 
        -image1 "textureEditorUnfoldUVsLarge.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "unfold -i 5000 -ss 0.001 -gb 0 -gmb 0.5 -pub 0 -ps  0 -oa  0 -us off" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Automatically move UVs for better texture space distribution" 
        -enableBackground 0
        -align "center" 
        -label "Relax" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyRelaxUVShell.png" 
        -image1 "polyRelaxUVShell.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "untangleUV -r uniform -pb 1 -ps 0 -pu 0 -rt 0 -mri 5" 
        -sourceType "mel" 
        -doubleClickCommand "performPolyUntangleUV relax 1" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Transfer UVs from one to many" 
        -enableBackground 0
        -align "center" 
        -label "Multi-transfer UVs" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "TUV" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyCopyUVSet.png" 
        -image1 "polyCopyUVSet.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.all as pm\n\nsl = pm.ls(sl=True)\nsrc = sl.pop(0)\n\nfor i in sl :\n    pm.transferAttributes( src, i, sampleSpace=4, transferUVs=2 )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "polyFlipUV -flipType 1 -local on" 
        -enableBackground 0
        -align "center" 
        -label "FlipUV_vertical" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "F V" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polyFlipUV -flipType 1 -local on" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "polyFlipUV -flipType 0 -local on" 
        -enableBackground 0
        -align "center" 
        -label "FlipUV_horizontal" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "F H" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polyFlipUV -flipType 0 -local on" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "save UV snapshot next to file" 
        -enableBackground 0
        -align "center" 
        -label "UV Snapshot" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "UVSS" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "UV_Optimize_BrushLarge.png" 
        -image1 "UV_Optimize_BrushLarge.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.all as pm\nimport os.path\n\n#uvSnapshot -aa -n \"/Volumes/SSD/Work/Bonsai/BonsaiArt/Production/Environment/Farm_Map/Buildings/CowPasture/Maya/CowPasture_outUV.png\" -xr 1024 -yr 1024 -r 255 -g 255 -b 255 -o -ff png;\n\nsceneName = pm.system.sceneName()\n\nif( sceneName == '' ) :\n    pm.error( 'Please save your scene first' )\n\nsceneName = os.path.splitext( sceneName )[0]\nsceneName += '_outUV.png'\n\n\npm.uvSnapshot( aa=True, n=sceneName, xr=1024, yr=1024, r=255, b=255, g=255, o=True, ff='png' )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
